import React, { PropTypes } from 'react';
import { connect } from 'react-redux';
import CommonUtil from '../../../../assets/js/common.js';
import { Row, Col, Modal, Input, Button, Select, Cascader, Table, AutoComplete, Radio, DatePicker, InputNumber, Checkbox } from 'antd';
import HistorySearchInput from '../search';
import './style.css';
const RadioGroup = Radio.Group;
const RadioButton = Radio.Button;
class BusinessInfo extends React.Component {
  constructor(props) {
    super(props);
    		this.state = {
			value: 1,
			indeterminate: true,
			checkAll: false,
			tableData:{},
			isSelectAll:false,
		};

  }
  
	getTableData() {
		const dataObj = [
			{
				SPQName:'301总医院项目',
				SPQID:'123',
				FrameNumber:'567',
				ProjectDate:'2015/12/12~2016/11/11',
				TotalAmount:1234.32,
				PassCondition:'XXXXX',
				ProductCategory:'数统企业网',
				ProductSeries:'AR SMB1',
				ProductSeriesAmount:'323.32',
				Discount:32
			},
			{
				SPQName:'301总医院项目',
				SPQID:'123',
				FrameNumber:'567',
				ProjectDate:'2015/12/12~2016/11/11',
				TotalAmount:1234.32,
				PassCondition:'XXXXX',
				ProductCategory:'数统企业网',
				ProductSeries:'AR SMB2',
				ProductSeriesAmount:'323.32',
				Discount:32
			},
			{
				SPQName:'301总医院项目',
				SPQID:'123',
				FrameNumber:'567',
				ProjectDate:'2015/12/12~2016/11/11',
				TotalAmount:1234.32,
				PassCondition:'XXXXX',
				ProductCategory:'服务器',
				ProductSeries:'AR SMB3',
				ProductSeriesAmount:'323.32',
				Discount:32
			}
			 ,
			 {
			 	SPQName:'21世纪经济',
			 	SPQID:'123q',
			 	FrameNumber:'567',
			 	ProjectDate:'2015/12/12~2016/11/11',
			 	TotalAmount:1234.32,
			 	PassCondition:'XXXXX',
			 	ProductCategory:'服务器',
			 	ProductSeries:'AR SMB1',
			 	ProductSeriesAmount:'323.32',
			 	Discount:32
			 }
			 ,
			 {
			 	SPQName:'21世纪经济',
			 	SPQID:'123q',
			 	FrameNumber:'567',
			 	ProjectDate:'2015/12/12~2016/11/11',
			 	TotalAmount:1234.32,
			 	PassCondition:'XXXXX',
			 	ProductCategory:'路由器',
			 	ProductSeries:'AR SMB2',
			 	ProductSeriesAmount:'323.32',
			 	Discount:32
			 },
			 {
			 	SPQName:'21世纪经济',
			 	SPQID:'123q',
			 	FrameNumber:'567',
			 	ProjectDate:'2015/12/12~2016/11/11',
			 	TotalAmount:1234.32,
			 	PassCondition:'XXXXX',
			 	ProductCategory:'路由器',
			 	ProductSeries:'AR SMB3',
			 	ProductSeriesAmount:'323.32',
			 	Discount:32
			 },
			 {
			 	SPQName:'21世纪经济',
			 	SPQID:'123q',
			 	FrameNumber:'567',
			 	ProjectDate:'2015/12/12~2016/11/11',
			 	TotalAmount:1234.32,
			 	PassCondition:'XXXXX',
			 	ProductCategory:'路由器',
			 	ProductSeries:'AR SMB3',
			 	ProductSeriesAmount:'323.32',
			 	Discount:32
			 }
		]

		return dataObj;
	}

	getGroupDataFromRows(groupFlag, rows) {
		const groupMap = new Map();
		for (const item of rows) {
			if (groupMap.has(item[groupFlag])) {
				const groupsData = groupMap.get(item[groupFlag]);
				groupsData.push(item);
			} else {
				const groupsData = [];
				groupsData.push(item);
				groupMap.set(item[groupFlag], groupsData);
			}
		}
		return groupMap;
	}


	getProductRowsInfoFromData(productCategoryGroupMap) {
		const rows = [];
		for (const [key, value] of productCategoryGroupMap) {
			const oneRow = {
				ProductCategory: key,
				ProductSeries: value
			}
			rows.push(oneRow);
		}
		return rows;
	}

	getStandardData() {
		const tableData = this.getTableData();
		const projectGroupData = this.getGroupDataFromRows('SPQID', tableData);
		const standardData = [];
		for (const [key, value] of projectGroupData) {
			const oneProject = {
				SPQID: key,
				ProductCategory: []
			}
			const productCategoryGroupMap = this.getGroupDataFromRows('ProductCategory', value);
			oneProject.ProductCategory = this.getProductRowsInfoFromData(productCategoryGroupMap);
			standardData.push(oneProject);
		}
		return standardData;
	}

	onCheckProjectChange(SPQID) {
		debugger;
		let isAllSelected = true;
		this.state.tableData.map(item=>{
			if(item.SPQID === SPQID){
				item.selected = true;
			}
			if(item.selected === false){
				isAllSelected = false;
			}
		});

		this.setState({
			isSelectAll:isAllSelected 
		});
	}

	generateTableRows() {
		debugger;
		const standardData = this.getStandardData();
		this.state.tableData = standardData;
		const rows = [];
		const _this = this;
		standardData.map(function (projectItem) {
			let projectIndex = 0;
			let projectRowSpan = 0;
			let isCreateProjectTd;
			if (projectIndex === 0) {
				projectItem.ProductCategory.map((items) => {
					projectRowSpan += items.ProductSeries.length;
					isCreateProjectTd = true;
				});
				
			} else {
				projectRowSpan = 0;
				isCreateProjectTd = false;
			}
			
			projectItem.ProductCategory.map((categoryItems) => {
				let categoryIndex = 0;
				let categoryRowSpan = categoryItems.ProductSeries.length;
				let isCreateCategoryTd;
				if (categoryIndex === 0) {
					categoryRowSpan = categoryItems.ProductSeries.length;
					isCreateCategoryTd = true;
				} else {
					categoryRowSpan = 0;
					isCreateCategoryTd = false;
				}
				
				categoryItems.ProductSeries.map((seriesItems) => {
					const tr = <tr>
						{isCreateProjectTd ? <td rowSpan={projectRowSpan}>
						<Checkbox onChange={_this.onCheckProjectChange.bind(_this,seriesItems.SPQID)}></Checkbox></td> : ''}
						{isCreateProjectTd ? <td rowSpan={projectRowSpan}>{seriesItems.SPQName}</td> : ''}
						{isCreateProjectTd ? <td rowSpan={projectRowSpan}>{seriesItems.SPQID}</td> : ''}
						{isCreateProjectTd ? <td rowSpan={projectRowSpan}>{seriesItems.ProjectDate}</td> : ''}
						{isCreateProjectTd ? <td rowSpan={projectRowSpan}>{seriesItems.TotalAmount}</td> : ''}
						{isCreateProjectTd ? <td rowSpan={projectRowSpan}>{seriesItems.PassCondition}</td> : ''}
						{isCreateCategoryTd ? <td rowSpan={categoryRowSpan}>{seriesItems.ProductCategory}</td> : ''}
						{isCreateCategoryTd ? <td rowSpan={categoryRowSpan}>{123.33}</td> : ''}
						<td >{seriesItems.ProductSeries}</td>
						<td >{seriesItems.ProductSeriesAmount}</td>
						<td >{seriesItems.Discount}</td>
					</tr>;

					rows.push(tr);
					isCreateProjectTd = false;
					isCreateCategoryTd = false;
					projectIndex++;
					categoryIndex++;
				});
			})
		})
		return rows;
	}

	onCheckAllChange(e) {
		this.state.tableData.map(item=>{
			item.selected = !this.state.isSelectAll;
		});
		this.setState({
			isSelectAll:!this.state.isSelectAll 	
		});
	}

	onCategoryChange(e) {
		console.log('radio checked', e.target.value);
		this.setState({
			value: e.target.value,
		});
	}

  onSeriesChange(e) {
		console.log(`radio checked:${e.target.value}`);
	}

  render() {
    return (
      			<div className='business-info-container'>
				<div className='table-content'>
					<table>
						<thead>
							<th><Checkbox  onChange={this.onCheckAllChange.bind(this)} checked={this.state.isSelectAll} ></Checkbox></th>
							<th>特价/项目名称</th>
							<th>特价编号</th>
							<th>项目时间</th>
							<th>总金额</th>
							<th>特价条件通过</th>
							<th>产品大类</th>
							<th>产品大类金额</th>
							<th>产品系列</th>
							<th>产品系列金额</th>
							<th>产品折扣</th>
						</thead>
						{this.generateTableRows()}
					</table>
				</div>
				<div>

					<div className='changeCata'>
						<RadioGroup onChange={this.onCategoryChange.bind(this)} value={this.state.value}>
							<Radio value={1}>数通企业网</Radio>
							<Radio value={2}>服务器</Radio>
						</RadioGroup>
					</div>

					<div>
						<RadioGroup onChange={this.onSeriesChange.bind(this)} defaultValue="a">
							<RadioButton value="a">ARSMS</RadioButton>
							<RadioButton value="b">S1700</RadioButton>
							<RadioButton value="c">BKK848</RadioButton>
							<RadioButton value="d">CKN123</RadioButton>
						</RadioGroup>
					</div>

				</div>
			</div>
    );
  }
}

const mapStateToProps = (state) => {
  return { };
};

const mapDispatchToProps = (dispatch, ownProps) => {
	return {}
};

export default connect(mapStateToProps,mapDispatchToProps)(BusinessInfo);

.business-info-container td {
    text-align: center;
    font-size: 12px;
    color: #999;
    height: 25px;
    border: 1px solid #DCE5EA;
}


.business-info-container th{
    height: 25px;
    text-align: center;
    font-size: 12px;
    color: white;
    font-size: 14px;
    border: 1px solid #DCE5EA;
    background-color: #2db7f5;
}

.business-info-container table{
    width: 100%;
    border-collapse: collapse;
}


.business-info-container .stairsContent{
    display: -webkit-flex; /* Safari */
    display: flex;
    flex-direction: column ;
    height: 50px;
    min-width: 200px;
}

.business-info-container .tdTop{
    background-color: #A3E0FF;
    color: #ff0000;
    font-size: 16px;
    font-weight: 500;    
    flex:1;
    height: 25px;
    display: flex;
    align-items:center;
    justify-content: center;
}

.business-info-container .tdBottom{
    display: flex;
    flex-direction: row ;
    height: 25px;
}

.business-info-container .tdBottomLeft{
    background-color: #C8EBFF;
    color: #f7931e;
    font-size: 12px;
    font-weight: 500;    
    flex:1;
    text-overflow: ellipsis;
    overflow:hidden;
    display: flex;
    align-items:center;
    justify-content: center;
}

.business-info-container .tdBottomRight{
    background-color:#E1F5FE;
    color:#203c4b;
    font-size: 12px;
    font-weight: 500;    
    flex:1;
    text-overflow: ellipsis;
    overflow:hidden;
    display: flex;
    align-items:center;
    justify-content: center;
}

.business-info-container .center{
    display: flex;
    align-items:center;
    justify-content: center;    
}

.business-info-container .commercialTable{
    min-width: 1300px;
}

.business-info-container {
    overflow-x: auto;
}

.business-info-container .titleText{
    font-size: 14px;
    color: #666;
    margin: 5px;
}

.business-info-container .stageCell{
    background-color:#fafafa;
}

.business-info-container .link{
    color: #29abe2;
}

.business-info-container .showOrHideButton{
    color: #fa0;
    cursor:pointer;
    font-size: 16px;
    margin-left: 5px;
}

.business-info-container .tdtitle{
      min-width: 180px;
      text-align: left;
}

.business-info-container .tdstairs{
      min-width: 200px;
      height: 50px
}

.business-info-container .noServer{
    font-size: 11px;
    color: black;
}

.business-info-container .percent{
    color: #29abe2;
}

.business-info-container .changeCata{
    border-left-width: 15px;
    padding-left: 15px;
    margin-top: 12px;
    margin-bottom: 5px;
    background-color: #e8e8e8;
}
         
.business-info-container .ant-radio-button-wrapper-checked{
    border-left: 1px #eeeeee solid;
    border-top: 1px #eeeeee solid;
    border-right: 1px #eeeeee solid;
    border-bottom: 3px #A3E0FF solid;
    background: white;
    color: black;
    box-shadow: -1px 0 0 0 #eeeeee; 
}
